FORMAT: 1A
HOST: https://456e67cf.ngrok.io/connect

# Zephyr Cloud REST API
Zephyr for Jira(Cloud) REST API allows to access test assets.

Authentication: Use JWT authentication for Zephyr REST API authentication, provide Zephyr AccessKey and secretkey. Zephyr server responds
with a cookie containing acpt token. Please use cookies for authentication.

Note: JWT authentication requires username and tenantId to generate accessKey and secretKey.

# Group Attachment
AttachmentController

## Get attachment thumbnail  [/public/rest/api/1.0/attachment/{attachmentId}/thumbnail]
### Get attachment thumbnail  [GET]
 Get attachment thumbnail by attachmentId  


+ Parameters
    + attachmentId (required,  String) ... attachmentId of Attachment


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        File


## Create attachment  [/public/rest/api/1.0/attachment{?executionId,issueId,versionId,entityName,cycleId,entityId,comment,projectId}]
### Create attachment  [POST]
 Create attachment by entityName <table> <thead> <tr> <th>Parameter</th> <th>Type</th> <th>Value</th> <th>Required</th> </tr> </thead> <tbody> <tr> <td>projectId</td> <td>Long</td> <td>10000</td> <td>True</td> </tr> <tr> <td>versionId</td> <td>Long</td> <td>10001</td> <td>True</td> </tr> <tr> <td>issueId</td> <td>Long</td> <td>10047</td> <td>True</td> </tr> <tr> <td>executionId</td> <td>String</td> <td>0001479842076001-42e2be69451-0001</td> <td>True</td> </tr> <tr> <td>entityName</td> <td>String</td> <td>execution/stepResult</td> <td>True</td> </tr> <tr> <td>cycleId</td> <td>String</td> <td>0001579842076001-42e2be69451-0001</td> <td>True</td> </tr> <tr> <td>entityId</td> <td>String</td> <td>0001479842076551-42e2be69451-0001</td> <td>True</td> </tr> <tr> <td>comment</td> <td>String</td> <td>Sample comment</td> <td>False</td> </tr> </tbody></table> 


+ Parameters
    + executionId (optional,  String ) ... executionId of Attachment
    + issueId (required,  String) ... issueId of Attachment
    + versionId (required,  Long) ... versionId of Attachment
    + entityName (required,  String) ... entityName of Attachment
    + cycleId (required,  String) ... cycleId of Attachment
    + entityId (required,  String) ... entityId of Attachment
    + comment (required,  String) ... comment of Attachment
    + projectId (required,  String) ... projectId of Attachment


+ Request (multipart/form-data)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"id":"0001479249223490-fa312653ffffd5ee-0001","ztId":"0001477932565262-320cc225ffffcb40-0001","name":"amazon-order-wrong.pdf","fileExtension":"pdf","createDate":"11-15-2016 14:33:43","createdBy":"admin","size":156039,"comment":"","entityId":"0001479156054097-4676fceeffffec4c-0001","entityType":"execution","cycleId":"0001479155955288-4676fceeffffec4c-0001","versionId":-1,"ztIdIndex":"0001477932565262-320cc225ffffcb40-0001","createDateLong":1479249223250}]


## Get execution attachments lists  [/public/rest/api/1.0/attachment/search/execution{?issueId,entityId,projectId}]
### Get execution attachments lists  [GET]
 Get execution attachments list by entityId  


+ Parameters
    + issueId (required,  String) ... issueId of Attachment
    + entityId (required,  String) ... entityId of Attachment
    + projectId (required,  String) ... projectId of Attachment


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"id":"0001479249374815-fa312653ffffd5ee-0001","ztId":"0001477932565262-320cc225ffffcb40-0001","name":"Colorful-Bokeh-YouTube-Channel-Art.jpg","fileExtension":"jpg","createDate":"11-15-2016 14:36:14","createdBy":"admin","size":214226,"comment":"","entityId":"0001479156054097-4676fceeffffec4c-0001","entityType":"execution","cycleId":"0001479155955288-4676fceeffffec4c-0001","versionId":-1,"ztIdIndex":"0001477932565262-320cc225ffffcb40-0001","createDateLong":1479249374803}]


## Delete attachment  [/public/rest/api/1.0/attachment/{attachmentId}]
### Delete attachment  [DELETE]
 Delete attachment by attachmentId  


+ Parameters
    + attachmentId (required,  String) ... attachmentId of Attachment


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        ok


## Get StepResult attachment list   [/public/rest/api/1.0/attachment/search/stepresult{?executionId,issueId,projectId}]
### Get StepResult attachment list   [POST]
 Get StepResult attachment list  


+ Parameters
    + executionId (required,  String) ... executionId of Attachment
    + issueId (required,  String) ... issueId of Attachment
    + projectId (required,  String) ... projectId of Attachment


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"0001479249470823-fa312653ffffd5ee-0001":[],"0001479249470841-fa312653ffffd5ee-0001":[{"id":"0001479249877899-fa312653ffffd5ee-0001","ztId":"0001477932565262-320cc225ffffcb40-0001","name":"a.jpg","fileExtension":"jpg","createDate":"11-15-2016 14:44:37","createdBy":"admin","size":102940,"comment":"","entityId":"0001479249470841-fa312653ffffd5ee-0001","entityType":"stepresult","cycleId":"0001479152878248-4676fceeffffec4c-0001","versionId":-1,"ztIdIndex":"0001477932565262-320cc225ffffcb40-0001","createDateLong":1479249877706}]}


## Get attachment image  [/public/rest/api/1.0/attachment/{attachmentId}]
### Get attachment image  [GET]
 Get attachment image by attachmentId  


+ Parameters
    + attachmentId (required,  String) ... attachmentId of Attachment


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        File



# Group Chart
ChartController

## Get created tests chart  [/public/rest/api/1.0/chart/tests/created{?daysPrevious,maxResults,periodName,projectId}]
### Get created tests chart  [GET]
 Get created tests chart by projectId  


+ Parameters
    + daysPrevious (required,  Long) ... daysPrevious of Chart
    + maxResults (optional,  Integer ) ... maxResults of Chart
    + periodName (required,  String) ... periodName of Chart
    + projectId (required,  Long) ... projectId of Chart


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"TestsCreationPeriod":30,"TestsCreationMap":{"1476601200000":0,"1476687600000":0,"1476774000000":0,"1476860400000":0,"1476946800000":0,"1477033200000":0,"1477119600000":0,"1477206000000":0,"1477292400000":0,"1477378800000":0,"1477465200000":0,"1477551600000":0,"1477638000000":0,"1477724400000":0,"1477810800000":0,"1477897200000":27,"1477983600000":0,"1478070000000":32,"1478156400000":2,"1478242800000":0,"1478329200000":0,"1478415600000":0,"1478505600000":0,"1478592000000":0,"1478678400000":0,"1478764800000":1,"1478851200000":0,"1478937600000":0,"1479024000000":0,"1479110400000":0,"1479196800000":0},"TestsCreationCount":62}


## Get created executions chart  [/public/rest/api/1.0/chart/executions/created{?daysPrevious,periodName,projectId}]
### Get created executions chart  [GET]
 Get created executions chart by projectId  


+ Parameters
    + daysPrevious (required,  Long) ... daysPrevious of Chart
    + periodName (required,  String) ... periodName of Chart
    + projectId (required,  Long) ... projectId of Chart


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"data":{"1476601200000":{"total":0,"executed":0},"1476687600000":{"total":0,"executed":0},"1476774000000":{"total":0,"executed":0},"1476860400000":{"total":0,"executed":0},"1476946800000":{"total":0,"executed":0},"1477033200000":{"total":0,"executed":0},"1477119600000":{"total":0,"executed":0},"1477206000000":{"total":0,"executed":0},"1477292400000":{"total":0,"executed":0},"1477378800000":{"total":0,"executed":0},"1477465200000":{"total":0,"executed":0},"1477551600000":{"total":0,"executed":0},"1477638000000":{"total":0,"executed":0},"1477724400000":{"total":0,"executed":0},"1477810800000":{"total":0,"executed":0},"1477897200000":{"total":0,"executed":0},"1477983600000":{"total":0,"executed":0},"1478070000000":{"total":0,"executed":0},"1478156400000":{"total":0,"executed":0},"1478242800000":{"total":0,"executed":0},"1478329200000":{"total":0,"executed":0},"1478415600000":{"total":0,"executed":0},"1478505600000":{"total":0,"executed":0},"1478592000000":{"total":0,"executed":0},"1478678400000":{"total":0,"executed":0},"1478764800000":{"total":0,"executed":0},"1478851200000":{"total":0,"executed":0},"1478937600000":{"total":0,"executed":0},"1479024000000":{"total":0,"executed":0},"1479110400000":{"total":46,"executed":46},"1479196800000":{"total":0,"executed":0}}}



# Group Config
ConfigController

## Get General Configuration  [/public/rest/api/1.0/config/generalinformation]
### Get General Configuration  [GET]
Retrieves General Configuration information about the Test Issue Type. 



+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"issueType": {"self": "https://test.atlassian.net/rest/api/2/issuetype/10000","id": 10000, "name": "Test","description": "This JIRA Issue Type is used to create Zephyr Tests.", "iconUri": "https://test.atlassian.net/secure/viewavatar?size=xsmall&avatarId=11001&avatarType=issuetype","subtask":false}}



# Group Cycle
CycleController

## Creates new cycle [/public/rest/api/1.0/cycle{?expand,clonedCycleId}]
### Creates new cycle [POST]
Creates a Cycle from a JSON representation. 
An Adhoc cycle is created by the system and any attempt to create it by a user will be rejected or ignored.
 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="4"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td><td><strong>Required</strong></td>  </tr> <tr> <td>name</td> <td>String</td> <td>Test Cycle</td><td>Y</td></tr>  <tr> <td>build</td> <td>String</td> <td>build 1.0</td> <td>N</td></tr>  <tr> <td>environment</td> <td>String</td> <td>Bug Fix</td> <td>N</td></tr>  <tr> <td>description</td> <td>String</td> <td>This contains the zephyr tests for a version</td> <td>N</td> </tr> <tr> <td>startDate</td> <td>Date</td> <td>2016-01-13</td> <td>N</td></tr> <tr><td>endDate</td> <td>Date</td> <td>2016-01-21</td> <td>N</td> </tr> <tr> <td>projectId</td> <td>Integer</td> <td>10100</td> <td>Y</td></tr>  <tr> <td>versionId</td> <td>Integer</td> <td>10000</td> <td>Y</td></tr> </tbody></table> 


+ Parameters
    + expand (optional, String) ... expand of Cycle
    + clonedCycleId (optional, String) ... clonedCycleId of Cycle


+ Request (application/json)

        {"name":"Test Cycle","build":"build 1.0","environment":"Bug Fix","description":"This contains the zephyr tests for a version","startDate":"2016-01-13","endDate":"2016-01-21","projectId":10100,"versionId":10000}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"endDate":"2016-01-21","tenantKey":"amlyYTozNDBmMjc0ZS0wZTkxLTRmZTktYWZjNy05YzE5MmNlODk3YWY=","description":"This contains the zephyr tests for a version","cycleIndex":"0001458126076641-b82a729d7df-0001","projectCycleVersionIndex":"10100_10000","createdByDisplayName":{"defined":true,"empty":false,"orNull":"admin"},"sprintId":null,"environment":"Bug Fix","versionId":10000,"build":"build 1.0","createdBy":"admin","name":"Test Cycle","modifiedBy":null,"id":"0001458126076641-b82a729d7df-0001","class":"com.thed.zephyr.connect.model.nosql.Cycle","projectId":10100,"startDate":"2016-01-13"}


## Copy Execution to Cycle [/public/rest/api/1.0/cycle/{cycleId}/copy]
### Copy Execution to Cycle [POST]
Copy Execution to Cycle 
 <table border="1" width="100%"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>executions</td> <td>String Array</td> <td>["0001456662091782-5a6ee13a3f6b-0001","0001456662092010-5a6ee13a3f6b-0001"]</td> </tr> <tr> <td>projectId</td> <td>Integer</td> <td>10000</td> </tr> <tr> <td>versionId</td> <td>Integer</td> <td>-1</td> </tr> <tr> <td>clearDefectMappingFlag</td> <td>Boolean</td> <td>true</td> </tr> <tr> <td>clearStatusFlag</td> <td>Boolean</td> <td>true</td> </tr> <tr> <td>clearAssignmentsFlag</td> <td>Boolean</td> <td>true</td> </tr> </tbody> </table>  


+ Parameters
    + cycleId (required,  String) ... cycleId of Cycle


+ Request (application/json)

        {"executions":["0001479277915060-fa312653ffffd5ee-0001","0001479365053023-725f24aeffff8568-0001","0001479405945581-725f24aeffff8568-0001","0001479515644605-62ad9af21f8b-0001","0001479515645098-62ad9af21f8b-0001","0001479517127726-62ad9af21f8b-0001","0001479517128256-62ad9af21f8b-0001","0001479517128426-62ad9af21f8b-0001"],"projectId":10000,"versionId":-1,"clearDefectMappingFlag":true,"clearStatusFlag":true,"clearAssignmentsFlag":true}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/text)

        0001456662339082-5a6ee13a3f6b-0001


## Update Cycle [/public/rest/api/1.0/cycle/{cycleId}]
### Update Cycle [PUT]
Updates the specified Cycle from a JSON representation. 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="4"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td><td><strong>Required</strong></td> </tr> <tr><td>name</td> <td>String</td> <td>Update Cycle</td><td>Y</td></tr> <tr> <td>build</td> <td>String</td> <td>build 2.0</td><td>N</td></tr> <tr> <td>environment</td> <td>String</td> <td>Bug Fix</td><td>N</td> </tr> <tr><td>description</td> <td>String</td> <td>This contains the zephyr tests for a version</td><td>N</td></tr> <tr> <td>startDate</td> <td>Date</td> <td>2016-01-13</td><td>N</td></tr> <tr><td>endDate</td> <td>Date</td> <td>2016-01-21</td><td>N</td></tr> <tr> <td>projectId</td> <td>Integer</td> <td>10100</td><td>Y</td> </tr> <tr> <td>versionId</td> <td>Integer</td> <td>10000</td> <td>Y</td></tr> </tbody></table> 


+ Parameters
    + cycleId (required,  String) ... cycleId of Cycle


+ Request (application/json)

        {"name":"Update Cycle","build":"build 2.0","environment":"Bug Fix","description":"This contains the zephyr tests for a version","startDate":"2016-01-13","endDate":"2016-01-21","projectId":10100,"versionId":10000}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"endDate":"2016-01-21","tenantKey":"amlyYTozNDBmMjc0ZS0wZTkxLTRmZTktYWZjNy05YzE5MmNlODk3YWY=","description":"This contains the zephyr tests for a version","cycleIndex":"0001458126076641-b82a729d7df-0001","projectCycleVersionIndex":"10100_10000","createdByDisplayName":{"defined":true,"empty":false,"orNull":"admin"},"sprintId":null,"environment":"Bug Fix","versionId":10000,"build":"build 2.0","createdBy":"admin","name":"Update Cycle","modifiedBy":"admin","id":"0001458126076641-b82a729d7df-0001","class":"com.thed.zephyr.connect.model.nosql.Cycle","projectId":10100,"startDate":"2016-01-13"}


## Export Cycle  [/public/rest/api/1.0/cycle/{cycleId}/export{?versionId,exportType,projectId}]
### Export Cycle  [GET]
Export Cycle Job Added 


+ Parameters
    + versionId (required,  Long) ... versionId of Cycle
    + exportType (required,  String) ... exportType of Cycle
    + cycleId (required,  String) ... cycleId of Cycle
    + projectId (required,  Long) ... projectId of Cycle


+ Request (application/json)



    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (text/plain)



## Delete Cycle  [/public/rest/api/1.0/cycle/{cycleId}{?versionId,projectId}]
### Delete Cycle  [DELETE]
Deletes the Cycle. All the entities including executions will be deleted along with the cycle 


+ Parameters
    + versionId (required,  Long) ... versionId of Cycle
    + cycleId (required,  String) ... cycleId of Cycle
    + projectId (required,  Long) ... projectId of Cycle


+ Request (application/json)

        {"projectId":10202,"versionId":"-1,10308","cycleId":"0001479126116358-242ac112-0001"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (text/html)

        {cycle 0001479126116358-242ac112-0001 successfully deleted}


## Move Execution by Cycle [/public/rest/api/1.0/cycle/{cycleId}/move]
### Move Execution by Cycle [POST]
Move execution by cycle 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"> <b>JSON Object Details</b> </td> </tr> <tr> <td><b>Parameters</b></td> <td><b>Type</b></td> <td><b>Value</b></td> </tr> <tr> <td>executions</td> <td>String Array</td> <td>[&quot;0001456662091782-5a6ee13a3f6b-0001&quot;,&quot;0001456662092010-5a6ee13a3f6b-0001&quot;]</td> </tr> <tr> <td>projectId</td> <td>Integer</td> <td>10000</td> </tr> <tr> <td>versionId</td> <td>Integer</td> <td>-1</td> </tr> <tr> <td>clearDefectMappingFlag</td> <td>Boolean</td> <td>true</td> </tr> <tr> <td>clearStatusFlag</td> <td>Boolean</td> <td>true</td> </tr> <tr> <td>clearAssignmentsFlag</td> <td>Boolean</td> <td>true</td> </tr> </tbody></table>  


+ Parameters
    + cycleId (required,  String) ... cycleId of Cycle


+ Request (application/json)

        {"executions":["0001456662091782-5a6ee13a3f6b-0001","0001456662092010-5a6ee13a3f6b-0001"],"projectId":10000,"versionId":-1,"clearDefectMappingFlag":true,"clearStatusFlag":true,"clearAssignmentsFlag":true}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/text)

        0001456662339082-5a6ee13a3f6b-0001


## Export cycle download [/public/rest/api/1.0/cycle/export/download/{fileName}]
### Export cycle download [GET]
Cycle export file to download 


+ Parameters
    + fileName (required,  String) ... fileName of Cycle


+ Request (application/json)



    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/x-download)



## Get List of Cycles  [/public/rest/api/1.0/cycles/search{?versionId,expand,projectId}]
### Get List of Cycles  [GET]
Returns all cycles for a given project and version long with grouped executions. 


+ Parameters
    + versionId (required,  Long) ... versionId of Cycle
    + expand (optional, String) ... expand of Cycle
    + projectId (required,  Long) ... projectId of Cycle


+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"offset":"0","endDate":"2016-02-29","tenantKey":"amlyYTo2NGU4MTI4My1kMTI4LTQ1MGMtYjg4MS01ZjFkY2ZhM2MzZDI=","totalExecutions":5,"description":null,"cycleIndex":"-1","totalExecuted":5,"projectCycleVersionIndex":"10000_-1","sprintId":null,"environment":null,"versionId":-1,"build":null,"createdBy":"admin","name":"Ad hoc","action":"expand","modifiedBy":null,"id":"-1","class":"com.thed.zephyr.connect.vo.GroupedExecutionSummary","projectId":10000,"startDate":null,"executionSummaries":[{"count":5,"executionStatusKey":-1,"executionStatusName":"UNEXECUTED","executionStatusDescription":"The test has not yet been executed.","executionStatusColor":"#A0A0A0","percentage":null},{"count":0,"executionStatusKey":1,"executionStatusName":"PASS","executionStatusDescription":"Test was executed and passed successfully.","executionStatusColor":"#75B000","percentage":null},{"count":0,"executionStatusKey":2,"executionStatusName":"FAIL","executionStatusDescription":"Test was executed and failed.","executionStatusColor":"#CC3300","percentage":null},{"count":0,"executionStatusKey":3,"executionStatusName":"WIP","executionStatusDescription":"Test execution is a work-in-progress.","executionStatusColor":"#F2B000","percentage":null},{"count":0,"executionStatusKey":4,"executionStatusName":"BLOCKED","executionStatusDescription":"The test execution of this test was blocked for some reason.","executionStatusColor":"#6693B0","percentage":null}]},{"offset":"0","endDate":null,"tenantKey":"amlyYTo2NGU4MTI4My1kMTI4LTQ1MGMtYjg4MS01ZjFkY2ZhM2MzZDI=","totalExecutions":5,"description":"","cycleIndex":"0001456223058152-242ac112-0001","totalExecuted":5,"projectCycleVersionIndex":"10000_-1","createdByDisplayName":{"defined":true,"orNull":"soumyaranjan swain [Administrator]","empty":false},"sprintId":null,"environment":"","versionId":-1,"build":"","createdBy":"admin","name":"c1","action":"expand","modifiedBy":null,"id":"0001456223058152-242ac112-0001","class":"com.thed.zephyr.connect.vo.GroupedExecutionSummary","projectId":10000,"startDate":null,"executionSummaries":[{"count":4,"executionStatusKey":-1,"executionStatusName":"UNEXECUTED","executionStatusDescription":"The test has not yet been executed.","executionStatusColor":"#A0A0A0","percentage":null},{"count":0,"executionStatusKey":1,"executionStatusName":"PASS","executionStatusDescription":"Test was executed and passed successfully.","executionStatusColor":"#75B000","percentage":null},{"count":0,"executionStatusKey":2,"executionStatusName":"FAIL","executionStatusDescription":"Test was executed and failed.","executionStatusColor":"#CC3300","percentage":null},{"count":1,"executionStatusKey":3,"executionStatusName":"WIP","executionStatusDescription":"Test execution is a work-in-progress.","executionStatusColor":"#F2B000","percentage":null},{"count":0,"executionStatusKey":4,"executionStatusName":"BLOCKED","executionStatusDescription":"The test execution of this test was blocked for some reason.","executionStatusColor":"#6693B0","percentage":null}]},{"offset":"0","endDate":"2016-02-29","tenantKey":"amlyYTo2NGU4MTI4My1kMTI4LTQ1MGMtYjg4MS01ZjFkY2ZhM2MzZDI=","totalExecutions":0,"description":"description","cycleIndex":"0001456611798248-242ac112-0001","totalExecuted":0,"projectCycleVersionIndex":"10000_-1","createdByDisplayName":{"defined":true,"orNull":"soumyaranjan swain [Administrator]","empty":false},"sprintId":null,"environment":"env4","versionId":-1,"build":"3","createdBy":"admin","name":"sample cycle updated","action":"expand","modifiedBy":"admin","id":"0001456611798248-242ac112-0001","class":"com.thed.zephyr.connect.vo.GroupedExecutionSummary","projectId":10000,"startDate":"2016-02-25","executionSummaries":[{"count":0,"executionStatusKey":-1,"executionStatusName":"UNEXECUTED","executionStatusDescription":"The test has not yet been executed.","executionStatusColor":"#A0A0A0","percentage":null},{"count":0,"executionStatusKey":1,"executionStatusName":"PASS","executionStatusDescription":"Test was executed and passed successfully.","executionStatusColor":"#75B000","percentage":null},{"count":0,"executionStatusKey":2,"executionStatusName":"FAIL","executionStatusDescription":"Test was executed and failed.","executionStatusColor":"#CC3300","percentage":null},{"count":0,"executionStatusKey":3,"executionStatusName":"WIP","executionStatusDescription":"Test execution is a work-in-progress.","executionStatusColor":"#F2B000","percentage":null},{"count":0,"executionStatusKey":4,"executionStatusName":"BLOCKED","executionStatusDescription":"The test execution of this test was blocked for some reason.","executionStatusColor":"#6693B0","percentage":null}]}]


## Get List of Cycles  [/private/rest/api/1.0/cycles/versionsandsprint]
### Get List of Cycles  [POST]
Returns a list of cycle(s) for a given Sprint along with exeution summaries. 



+ Request (text/plain)

        {"projectId":10202,"versionId":"-1,10308","sprintId":7,"offset":0,"expand":"executionSummaries"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"offset":"0","endDate":null,"tenantKey":"amlyYTpjNWQ3ZTQ0YS0zNDIwLTQ3YmUtYjA0ZC01Y2M1Y2FlMmE4NDU=","totalExecutions":0,"description":null,"cycleIndex":"0001479126116358-242ac112-0001","totalExecuted":0,"ztId":"0001478586826516-242ac112-0001","projectCycleVersionIndex":"10202_-1","createdByDisplayName":{"defined":true,"orNull":"poornachandra karamala  [Administrator]","empty":false},"sprintId":7,"environment":"","versionId":-1,"projectKey":"PERF","build":"","createdBy":"admin","name":"c1","action":"collapse","modifiedBy":"admin","id":"0001479126116358-242ac112-0001","class":"com.thed.zephyr.connect.vo.GroupedExecutionSummary","projectId":10202,"startDate":null,"executionSummaries":[{"count":0,"executionStatusKey":-1,"executionStatusName":"UNEXECUTED","executionStatusDescription":"The test has not yet been executed.","executionStatusColor":"#A0A0A0","percentage":null},{"count":0,"executionStatusKey":1,"executionStatusName":"PASS","executionStatusDescription":"Test was executed and passed successfully.","executionStatusColor":"#75B000","percentage":null},{"count":0,"executionStatusKey":2,"executionStatusName":"FAIL","executionStatusDescription":"Test was executed and failed.","executionStatusColor":"#CC3300","percentage":-},{"count":0,"executionStatusKey":3,"executionStatusName":"WIP","executionStatusDescription":"Test execution is a work-in-progress.","executionStatusColor":"#F2B000","percentage":null},{"count":0,"executionStatusKey":4,"executionStatusName":"BLOCKED","executionStatusDescription":"The test execution of this test was blocked for some reason.","executionStatusColor":"#6693B0","percentage":-},{"count":0,"executionStatusKey":5,"executionStatusName":"aatest","executionStatusDescription":"","executionStatusColor":"#EC6233","percentage":null},{"count":0,"executionStatusKey":7,"executionStatusName":"luxurious","executionStatusDescription":"","executionStatusColor":"#FB0278","percentage":null},{"count":0,"executionStatusKey":8,"executionStatusName":"jvm","executionStatusDescription":"","executionStatusColor":"#0EE6C8","percentage":null},{"count":0,"executionStatusKey":9,"executionStatusName":"junit","executionStatusDescription":"","executionStatusColor":"#4C00FD","percentage":-}]}]


## Get Cycle  [/public/rest/api/1.0/cycle/{cycleId}{?versionId,expand,projectId}]
### Get Cycle  [GET]
Returns a full representation of the Cycle for the given Fix Version.
An Cycle JSON consists of the Cycle details and expandos driven executionSummaries. 


+ Parameters
    + versionId (required,  Long) ... versionId of Cycle
    + expand (optional, String) ... expand of Cycle
    + cycleId (required,  String) ... cycleId of Cycle
    + projectId (required,  Long) ... projectId of Cycle


+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"endDate":"2016-01-21","tenantKey":"amlyYTozNDBmMjc0ZS0wZTkxLTRmZTktYWZjNy05YzE5MmNlODk3YWY=","description":"This contains the zephyr tests for a version","cycleIndex":"0001458126076641-b82a729d7df-0001","projectCycleVersionIndex":"10100_10000","createdByDisplayName":{"defined":true,"empty":false,"orNull":"admin"},"sprintId":null,"environment":"Bug Fix","versionId":10000,"build":"build 1.0","createdBy":"admin","name":"Test Cycle","modifiedBy":null,"id":"0001458126076641-b82a729d7df-0001","class":"com.thed.zephyr.connect.model.nosql.Cycle","projectId":10100,"startDate":"2016-01-13"}



# Group Execution
ExecutionController

## Delete Execution  [/public/rest/api/1.0/execution/{executionId}{?issueId}]
### Delete Execution  [DELETE]
Execution with the given id will be deleted. 


+ Parameters
    + executionId (required,  String) ... executionId of Execution
    + issueId (required,  Long) ... issueId of Execution


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (text/html)

        true/false


## Export Executions  [/public/rest/api/1.0/executions/export]
### Export Executions  [POST]
Exports the execution(s) that fits the search criteria 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>exportType</td> <td>String</td> <td>xml</td> </tr> <tr> <td>expand</td> <td>String</td> <td>teststeps</td> </tr> <tr> <td>executions</td> <td>String Array</td> <td>[&quot;0001456662092010-5a6ee13a3f6b-0001&quot;]</td> </tr> <tr> <td>startIndex</td> <td>Integer</td> <td>0</td> </tr> <tr> <td>maxAllowed</td> <td>Boolean</td> <td>true</td> </tr> <tr> <td>zqlQuery</td> <td>String</td> <td>&quot;&quot;</td> </tr> </tbody></table> 



+ Request (application/json)

        {"exportType":"xml","expand":"teststeps","executions":["0001456662092010-5a6ee13a3f6b-0001"],"startIndex":0,"maxAllowed":true,"zqlQuery":""}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (text/plain)

        0001456663770473-5a6ee13a3f6b-0001


## Get List of Executions  [/public/rest/api/1.0/executions{?issueId,offset,size,projectId}]
### Get List of Executions  [GET]
Gets execution(s) that fits into the given search criteria  


+ Parameters
    + issueId (required,  Long) ... issueId of Execution
    + offset (optional, Integer) ... offset of Execution
    + size (optional, Integer) ... size of Execution
    + projectId (required,  Long) ... projectId of Execution


+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"execution":{"execution":{"id":"0001456664462103-5a6ee13a3f6b-0001","issueId":10000,"versionId":-1,"projectId":10000,"cycleId":"0001456664262308-5a6ee13a3f6b-0001","orderId":1,"executedBy":"admin","executedOn":"02-28-2016 05:03:57","modifiedBy":"admin","createdBy":"admin","status":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"cycleName":"aaaa","defects":[{"id":10001,"key":"TEST-2","summary":"BBB","status":{"self":"http://192.168.1.68:2990/jira/rest/api/2/status/10000","name":"To Do","id":10000,"description":"","iconUrl":"http://192.168.1.68:2990/jira/images/icons/status_generic.gif"}}],"stepDefects":[],"executionDefectCount":1,"stepDefectCount":0,"totalDefectCount":1,"tenantKey":"amlyYTphN2VkOTUxZi1lZjg5LTQ0ZDktODJlZi1mMjM4YjRkY2FiN2I=","creationDate":"02-28-2016 05:01:02","issueIndex":10000,"projectCycleVersionIndex":"10000_0001456664262308-5a6ee13a3f6b-0001_-1","executionStatusIndex":1,"projectIssueCycleVersionIndex":"10000_10000_0001456664262308-5a6ee13a3f6b-0001_-1"},"issueKey":"TEST-1","issueLabel":"","component":"","issueSummary":"AAA","projectName":"Test","versionName":"Unscheduled","priority":"Medium","executedByDisplayName":{"defined":true,"empty":false,"orNull":"admin"},"testStepBeans":null,"defectsAsString":"","projectKey":"TEST"},"executionStatus":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}}}


## Get List of Linked Executions To Issue [/public/rest/api/1.0/executions/search/issue/{issueIdOrKey}{?maxRecords,expand,offset,action}]
### Get List of Linked Executions To Issue [GET]
Gets execution(s) of the linked tests of the isuue 


+ Parameters
    + maxRecords (optional,  Integer ) ... maxRecords of Execution
    + expand (optional,  String) ... expand of Execution
    + offset (optional, Integer) ... offset of Execution
    + issueIdOrKey (required,  String) ... issueIdOrKey of Execution
    + action (required,  String) ... action of Execution


+ Request (application/json)



    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)



## Update Execution [/public/rest/api/1.0/execution/{executionId}]
### Update Execution [PUT]
Execution with the given id will get updated 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>status</td> <td>Object</td> <td>{&quot;id&quot;:1}</td> </tr> <tr> <td>id</td> <td>String</td> <td>0001456664462103-5a6ee13a3f6b-0001</td> </tr> <tr> <td>projectId</td> <td>Integer</td> <td>10000</td> </tr> <tr> <td>issueId</td> <td>Integer</td> <td>10000</td> </tr> <tr> <td>cycleId</td> <td>String</td> <td>0001456664262308-5a6ee13a3f6b-0001</td> </tr> <tr> <td>versionId</td> <td>Integer</td> <td>-1</td> </tr> </tbody></table> 


+ Parameters
    + executionId (required,  String) ... executionId of Execution


+ Request (application/json)

        {"status":{"id":1},"id":"0001456664462103-5a6ee13a3f6b-0001","projectId":10000,"issueId":10000,"cycleId":"0001456664262308-5a6ee13a3f6b-0001","versionId":-1}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"execution":{"id":"0001456664462103-5a6ee13a3f6b-0001","issueId":10000,"versionId":-1,"projectId":10000,"cycleId":"0001456664262308-5a6ee13a3f6b-0001","orderId":1,"executedBy":"admin","executedOn":"02-28-2016 05:03:57","modifiedBy":"admin","createdBy":"admin","status":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"cycleName":"aaaa","defects":[],"stepDefects":[],"executionDefectCount":0,"stepDefectCount":0,"totalDefectCount":0,"tenantKey":"amlyYTphN2VkOTUxZi1lZjg5LTQ0ZDktODJlZi1mMjM4YjRkY2FiN2I=","creationDate":"02-28-2016 05:01:02","issueIndex":10000,"projectCycleVersionIndex":"10000_0001456664262308-5a6ee13a3f6b-0001_-1","executionStatusIndex":1,"projectIssueCycleVersionIndex":"10000_10000_0001456664262308-5a6ee13a3f6b-0001_-1"},"issueKey":"TEST-1","issueLabel":"","component":"","issueSummary":"AAA","projectName":"Test","versionName":"Unscheduled","priority":"Medium","executedByDisplayName":{"defined":true,"empty":false,"orNull":"admin"},"testStepBeans":null,"defectsAsString":"","projectKey":"TEST"}


## Assign Bulk Executions [/public/rest/api/1.0/executions/bulkAssign]
### Assign Bulk Executions [POST]
assigns all the execution(s) with the assignee type that fits in the search criteria 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>executions</td> <td>String Array</td> <td>[&quot;0001462834520641-242ac112b-0001&quot;,&quot;0001462834520819-242ac112b-0001&quot;,&quot;0001462834521014-242ac112b-0001&quot;]</td> </tr> <tr> <td>assigneeType</td> <td>String</td> <td>currentUser/assignee</td> </tr> <tr> <td>assignee</td> <td>String</td> <td>jiraUserKey</td> </tr></tbody></table> 



+ Request (application/json)

        {"executions":["0001462834520641-242ac112b-0001","0001462834520819-242ac112b-0001","0001462834521014-242ac112b-0001"],"assigneeType":"assignee","assignee":"jiraUserKey"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"timeTaken":"0 min, 0 sec","stepMessage":"","summaryMessage":"","errorMessage":"","progress":1.0,"message":"{\"success\":\"0001462834520641-242ac112b-0001,0001462834520819-242ac112b-0001,0001462834521014-242ac112b-0001\",\"error\":\"\"}","stepLabel":"","stepMessages":[]}


## Delete Executions in Bulk [/public/rest/api/1.0/executions/delete]
### Delete Executions in Bulk [POST]
Deletes all the execution(s) that fits in the search criteria 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>executions</td> <td>String Array</td> <td>[&quot;0001462834520819-242ac112b-0001&quot;,&quot;0001462834521014-242ac112b-0001&quot;]</td> </tr> </tbody></table> 



+ Request (application/json)

        {"executions":["0001462834520819-242ac112b-0001","0001462834521014-242ac112b-0001"]}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"timeTaken":"0 min, 0 sec","stepMessage":"","summaryMessage":"","errorMessage":"","progress":1.0,"message":"{\"success\":\"0001462834403827-242ac112b-0001,0001462834404266-242ac112b-0001,0001462834404676-242ac112b-0001,0001462858845709-242ac112b-0001,0001462902555866-242ac1130-0001\"}","stepLabel":"","stepMessages":[]}


## Get Execution  [/public/rest/api/1.0/execution/{executionId}{?issueId,projectId}]
### Get Execution  [GET]
Get Execution Details by ExecutionId 


+ Parameters
    + executionId (required,  String) ... executionId of Execution
    + issueId (required,  Long) ... issueId of Execution
    + projectId (required,  Long) ... projectId of Execution


+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"execution":{"execution":{"id":"0001456664462103-5a6ee13a3f6b-0001","issueId":10000,"versionId":-1,"projectId":10000,"cycleId":"0001456664262308-5a6ee13a3f6b-0001","orderId":1,"executedBy":"admin","executedOn":"02-28-2016 05:03:57","modifiedBy":"admin","createdBy":"admin","status":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"cycleName":"aaaa","defects":[{"id":10001,"key":"TEST-2","summary":"BBB","status":{"self":"http://192.168.1.68:2990/jira/rest/api/2/status/10000","name":"To Do","id":10000,"description":"","iconUrl":"http://192.168.1.68:2990/jira/images/icons/status_generic.gif"}}],"stepDefects":[],"executionDefectCount":1,"stepDefectCount":0,"totalDefectCount":1,"tenantKey":"amlyYTphN2VkOTUxZi1lZjg5LTQ0ZDktODJlZi1mMjM4YjRkY2FiN2I=","creationDate":"02-28-2016 05:01:02","issueIndex":10000,"projectCycleVersionIndex":"10000_0001456664262308-5a6ee13a3f6b-0001_-1","executionStatusIndex":1,"projectIssueCycleVersionIndex":"10000_10000_0001456664262308-5a6ee13a3f6b-0001_-1"},"issueKey":"TEST-1","issueLabel":"","component":"","issueSummary":"AAA","projectName":"Test","versionName":"Unscheduled","priority":"Medium","executedByDisplayName":{"defined":true,"empty":false,"orNull":"admin"},"testStepBeans":null,"defectsAsString":"","projectKey":"TEST"},"executionStatus":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}}}


## Add Tests to Cycle  [/public/rest/api/1.0/executions/add/cycle/{cycleId}]
### Add Tests to Cycle  [POST]
Adds Tests(s) to a Cycle 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>issues</td> <td>String Array</td> <td>[&quot;TEST-1&quot;]</td> </tr> <tr> <td>versionId</td> <td>Integer</td> <td>-1</td> </tr> <tr> <td>projectId</td> <td>Integer</td> <td>10000</td> </tr> <tr> <td>method</td> <td>String</td> <td>&quot;1&quot;</td> </tr> </tbody></table> 


+ Parameters
    + cycleId (required,  String) ... cycleId of Execution


+ Request (application/json)

        {"issues":["TEST-1"],"versionId":-1,"projectId":10000,"method":"1"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"timeTaken":"0 min, 0 sec","stepMessage":null,"summaryMessage":null,"progress":1.0,"message":"{\"success\":[\"<a target='_parent' href='http://192.168.1.68:2990/jira/browse/TEST-1'>TEST-1</a>\"]}","stepMessages":[]}


## Create new execution [/public/rest/api/1.0/execution]
### Create new execution [POST]
Use this resource to create a new execution 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>status</td> <td>Object</td> <td>{&quot;id&quot;:1}</td> </tr> <tr> <td>id</td> <td>String</td> <td>0001456664462103-5a6ee13a3f6b-0001</td> </tr> <tr> <td>projectId</td> <td>Integer</td> <td>10000</td> </tr> <tr> <td>issueId</td> <td>Integer</td> <td>10000</td> </tr> <tr> <td>cycleId</td> <td>String</td> <td>0001456664262308-5a6ee13a3f6b-0001</td> </tr> <tr> <td>versionId</td> <td>Integer</td> <td>-1</td> </tr> </tbody></table> 



+ Request (application/json)

        {"status":{"id":1},"id":"0001456664462103-5a6ee13a3f6b-0001","projectId":10000,"issueId":10000,"cycleId":"0001456664262308-5a6ee13a3f6b-0001","versionId":-1}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"execution":{"id":"0001456664462103-5a6ee13a3f6b-0001","issueId":10000,"versionId":-1,"projectId":10000,"cycleId":"0001456664262308-5a6ee13a3f6b-0001","orderId":1,"executedBy":"admin","executedOn":"02-28-2016 05:03:57","modifiedBy":"admin","createdBy":"admin","status":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"cycleName":"aaaa","defects":[],"stepDefects":[],"executionDefectCount":0,"stepDefectCount":0,"totalDefectCount":0,"tenantKey":"amlyYTphN2VkOTUxZi1lZjg5LTQ0ZDktODJlZi1mMjM4YjRkY2FiN2I=","creationDate":"02-28-2016 05:01:02","issueIndex":10000,"projectCycleVersionIndex":"10000_0001456664262308-5a6ee13a3f6b-0001_-1","executionStatusIndex":1,"projectIssueCycleVersionIndex":"10000_10000_0001456664262308-5a6ee13a3f6b-0001_-1"},"issueKey":"TEST-1","issueLabel":"","component":"","issueSummary":"AAA","projectName":"Test","versionName":"Unscheduled","priority":"Medium","executedByDisplayName":{"defined":true,"empty":false,"orNull":"admin"},"testStepBeans":null,"defectsAsString":"","projectKey":"TEST"}


## Get execution statuses  [/public/rest/api/1.0/execution/statuses]
### Get execution statuses  [GET]
 Get all execution statuses  



+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}]


## Update Executions in Bulk [/public/rest/api/1.0/executions]
### Update Executions in Bulk [POST]
Updates all the execution(s) that fits in the search criteria 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>executions</td> <td>String Array</td> <td>[&quot;0001462834520641-242ac112b-0001&quot;,&quot;0001462834520819-242ac112b-0001&quot;,&quot;0001462834521014-242ac112b-0001&quot;]</td> </tr> <tr> <td>status</td> <td>Integer</td> <td>1</td> </tr> <tr> <td>clearDefectMappingFlag</td> <td>Boolean</td> <td>false</td> </tr> <tr> <td>testStepStatusChangeFlag</td> <td>Boolean</td> <td>true</td> </tr> <tr> <td>stepStatus</td> <td>Integer</td> <td>-1</td> </tr> </tbody></table> 



+ Request (application/json)

        {"executions":["0001462834520641-242ac112b-0001","0001462834520819-242ac112b-0001","0001462834521014-242ac112b-0001"],"status":1,"clearDefectMappingFlag":false,"testStepStatusChangeFlag":true,"stepStatus":-1}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"timeTaken":"0 min, 0 sec","stepMessage":"","summaryMessage":"","errorMessage":"","progress":1.0,"message":"{\"success\":\"0001462834520641-242ac112b-0001,0001462834520819-242ac112b-0001,0001462834521014-242ac112b-0001\",\"error\":\"\"}","stepLabel":"","stepMessages":[]}


## Get List of Executions  [/public/rest/api/1.0/executions/search{?executionId,issueId,projectId}]
### Get List of Executions  [POST]
To get execution(s) that fits into the given ZQL 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>maxRecords</td> <td>Integer</td> <td>20</td> </tr> <tr> <td>offset</td> <td>Integer</td> <td>0</td> </tr> <tr> <td>zqlQuery</td> <td>String</td> <td>field = \&quot;value\&quot;</td> </tr> </tbody></table> 


+ Parameters
    + executionId (required,  String) ... executionId of Execution
    + issueId (required,  Long) ... issueId of Execution
    + projectId (required,  Long) ... projectId of Execution


+ Request (application/json)

        {"maxRecords":20,"offset":0,"zqlQuery":"field = \"value\""}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"searchObjectList":[],"totalCount":0,"currentOffset":1,"executionStatus":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}},"stepExecutionStatus":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}}}


## Get Execution Summary of the Issues by Sprint [/public/rest/api/1.0/executions/search/sprint/{sprintId}/issues]
### Get Execution Summary of the Issues by Sprint [POST]
Gets the exection summary of the issue(s) in the sprint of sprintId 


+ Parameters
    + sprintId (required,  Long) ... sprintId of Execution


+ Request (application/json)



    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)



## Export execution download [/public/rest/api/1.0/executions/export/download/{fileName}]
### Export execution download [GET]
Execution export file to download 


+ Parameters
    + fileName (required,  String) ... fileName of Execution


+ Request (application/json)



    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/x-download)



## Get List of Executions  [/public/rest/api/1.0/executions/search/cycle/{cycleId}{?versionId,expand,offset,size,sortOrder,action,sortBy,projectId}]
### Get List of Executions  [GET]
Gets execution(s) by given Cycle Id 


+ Parameters
    + versionId (required,  Long) ... versionId of Execution
    + expand (optional, String) ... expand of Execution
    + offset (optional, Integer) ... offset of Execution
    + size (optional, Integer) ... size of Execution
    + sortOrder (optional,  String ) ... sortOrder of Execution
    + cycleId (required,  String) ... cycleId of Execution
    + action (optional, String) ... action of Execution
    + sortBy (optional,  String ) ... sortBy of Execution
    + projectId (required,  Long) ... projectId of Execution


+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"searchObjectList":[],"totalCount":0,"currentOffset":1,"executionStatus":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}},"stepExecutionStatus":null}




# Group JiraReport
JiraReportController

## Get top defect count  [/public/rest/api/1.0/defectcount{?versionId,issueStatuses,howMany,projectId}]
### Get top defect count  [GET]
 Get top defect count for report  


+ Parameters
    + versionId (required,  Long) ... versionId of JiraReport
    + issueStatuses (optional,  String ) ... issueStatuses of JiraReport
    + howMany (optional,  Integer ) ... howMany of JiraReport
    + projectId (required,  Long) ... projectId of JiraReport


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"data":[]}


## Get execution count  [/public/rest/api/1.0/executioncount{?groupFld,versionId,cycleId,periodName,projectId}]
### Get execution count  [GET]
 Get execution count for report  


+ Parameters
    + groupFld (required,  String) ... groupFld of JiraReport
    + versionId (required,  Long) ... versionId of JiraReport
    + cycleId (optional, String) ... cycleId of JiraReport
    + periodName (optional, String) ... periodName of JiraReport
    + projectId (required,  Long) ... projectId of JiraReport


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"groupFld":"","statusSeries":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}},"data":[]}


## Get test distribution count  [/public/rest/api/1.0/testdistributioncount{?groupFld,versionId,projectId}]
### Get test distribution count  [GET]
 Get test distribution count  


+ Parameters
    + groupFld (required,  String) ... groupFld of JiraReport
    + versionId (required,  Long) ... versionId of JiraReport
    + projectId (required,  Long) ... projectId of JiraReport


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"groupFld":"","urlBase":"TBD"}



# Group JobProgress
JobProgressController

## Get job progress status  [/public/rest/api/1.0/jobprogress/{jobProgressTicket}]
### Get job progress status  [GET]
 Get job progress with status  


+ Parameters
    + jobProgressTicket (required,  String) ... jobProgressTicket of JobProgress


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"timeTaken":"0 min, 0 sec","stepMessage":"","summaryMessage":"","errorMessage":"","progress":0.0,"message":"","stepLabel":"","stepMessages":[]}



# Group License
LicenseController

## Get addon info  [/public/rest/api/1.0/zlicense/addoninfo]
### Get addon info  [GET]
 Get addon information  



+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"defined":true,"empty":false,"orNull":{"key":"com.thed.zephyr.cloud","version":"1.1.8","state":"ENABLED","host":{"product":"JIRA","contacts":[{"name":"Your Name","email":"you@domain.com"}]},"license":null}}



# Group ServerInfo
ServerInfoController

## Get server information  [/public/rest/api/1.0/serverinfo]
### Get server information  [GET]
 Get server information  



+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"addonServerInfo":{"version":"2.1-rc-53-4bc0ed7","name":"zephyr-connect"},"jiraServerInfo":{"baseUri":"https://getzephyr.com","version":"1000.526.2","buildNumber":100018,"buildDate":{"weekyear":2016,"monthOfYear":11,"millisOfDay":0,"weekOfWeekyear":45,"yearOfEra":2016,"hourOfDay":0,"minuteOfHour":0,"secondOfMinute":0,"millisOfSecond":0,"yearOfCentury":16,"centuryOfEra":20,"secondOfDay":0,"minuteOfDay":0,"era":1,"dayOfYear":314,"dayOfWeek":3,"dayOfMonth":9,"year":2016,"chronology":{"zone":{"fixed":false,"uncachedZone":{"fixed":false,"cachable":true,"id":"America/Los_Angeles"},"id":"America/Los_Angeles"}},"zone":{"fixed":false,"uncachedZone":{"fixed":false,"cachable":true,"id":"America/Los_Angeles"},"id":"America/Los_Angeles"},"millis":1478678400000,"afterNow":false,"beforeNow":true,"equalNow":false},"serverTime":{"weekyear":2016,"monthOfYear":11,"millisOfDay":58937900,"weekOfWeekyear":46,"yearOfEra":2016,"hourOfDay":16,"minuteOfHour":22,"secondOfMinute":17,"millisOfSecond":900,"yearOfCentury":16,"centuryOfEra":20,"secondOfDay":58937,"minuteOfDay":982,"era":1,"dayOfYear":320,"dayOfWeek":2,"dayOfMonth":15,"year":2016,"chronology":{"zone":{"fixed":false,"uncachedZone":{"fixed":false,"cachable":true,"id":"America/Los_Angeles"},"id":"America/Los_Angeles"}},"zone":{"fixed":false,"uncachedZone":{"fixed":false,"cachable":true,"id":"America/Los_Angeles"},"id":"America/Los_Angeles"},"millis":1479255737900,"afterNow":false,"beforeNow":true,"equalNow":false},"scmInfo":"d415428281834d64643ecc666918911826753252","serverTitle":"JIRA"}}



# Group StepResult
StepResultController

## Get stepDefects by executionId  [/public/rest/api/1.0/stepdefect/byexecution{?executionId,expand,projectId}]
### Get stepDefects by executionId  [GET]
 Get all stepDefects by executionId   


+ Parameters
    + executionId (required,  String) ... executionId of StepResult
    + expand (optional, String) ... expand of StepResult
    + projectId (required,  Long) ... projectId of StepResult


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"stepDefects":{"1":{"currentStepExecutionStatus":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"stepDefects":[{"key":"SAM-63","status":"To Do","summary":"aaaa"}],"stepResultId":"0001479249470841-fa312653ffffd5ee-0001"}},"executionStatus":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#2DFB2E","type":0}},"executionDefectCount":0,"stepDefectCount":1,"totalDefectCount":1}


## Get StepResult by statusId  [/public/rest/api/1.0/stepresult/search/status/{statusId}{?offset,maxResults}]
### Get StepResult by statusId  [GET]
 Get all StepResult by statusId  


+ Parameters
    + statusId (required,  Integer) ... statusId of StepResult
    + offset (required,  Integer) ... offset of StepResult
    + maxResults (required,  Integer) ... maxResults of StepResult


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"id":"0001479249470823-fa312653ffffd5ee-0001","executedOn":1479252065900,"executedBy":"admin","executionId":"0001479152925797-4676fceeffffec4c-0001","stepId":"0001479249435120-fa312653ffffd5ee-0001","status":{"name":"KUSTOM","id":5,"description":"description","color":"#D7F4DC","type":1},"issueId":10052,"modifiedBy":"admin","executionIndex":"0001479152925797-4676fceeffffec4c-0001","issueIndex":10052,"executionStatusIndex":5}]


## Get StepResults by executionId  [/public/rest/api/1.0/stepresult/search{?executionId,issueId,isOrdered}]
### Get StepResults by executionId  [GET]
 Get all StepResults by executionId  


+ Parameters
    + executionId (required,  String) ... executionId of StepResult
    + issueId (required,  Long) ... issueId of StepResult
    + isOrdered (optional, Boolean) ... isOrdered of StepResult


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"stepResults":[{"id":"0001479947330216-42e2be69451-0001","executionId":"0001479947330129-42e2be69451-0001","stepId":"0001479947317061-42e2be69451-0001","status":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"issueId":10116,"modifiedBy":"admin","executionIndex":"0001479947330129-42e2be69451-0001","executionStatusIndex":-1,"issueIndex":10116,"orderId":1},{"id":"0001479947330232-42e2be69451-0001","executedOn":1479956118701,"executedBy":"admin","executionId":"0001479947330129-42e2be69451-0001","stepId":"0001479947320624-42e2be69451-0001","status":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"issueId":10116,"modifiedBy":"admin","executionIndex":"0001479947330129-42e2be69451-0001","executionStatusIndex":1,"issueIndex":10116,"orderId":2},{"id":"0001479947330248-42e2be69451-0001","executedOn":1479947372171,"comment":"","executedBy":"admin","executionId":"0001479947330129-42e2be69451-0001","stepId":"0001479947323141-42e2be69451-0001","status":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0},"issueId":10116,"modifiedBy":"admin","executionIndex":"0001479947330129-42e2be69451-0001","executionStatusIndex":4,"issueIndex":10116,"orderId":3},{"id":"0001479955137548-42e2be69451-0001","executedOn":1479955137548,"executedBy":"admin","executionId":"0001479947330129-42e2be69451-0001","stepId":"0001479954602302-42e2be69451-0001","status":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"issueId":10116,"executionIndex":"0001479947330129-42e2be69451-0001","executionStatusIndex":-1,"issueIndex":10116,"orderId":4}],"executionStatus":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0},"5":{"name":"SOME","id":5,"description":"AAA","color":"#9BE9C6","type":1}}}


## Update stepresult  [/public/rest/api/1.0/stepresult/{stepResultId}]
### Update stepresult  [PUT]
 Update stepresult by stepResultId  


+ Parameters
    + stepResultId (required,  String) ... stepResultId of StepResult


+ Request (application/json)

        {"status":{"id":2},"issueId":10052,"stepId":"0001479249432886-fa312653ffffd5ee-0001","executionId":"0001479152925797-4676fceeffffec4c-0001"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"id":"0001479249470841-fa312653ffffd5ee-0001","executedOn":1479251469860,"executedBy":"admin","executionId":"0001479152925797-4676fceeffffec4c-0001","stepId":"0001479249432886-fa312653ffffd5ee-0001","status":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"issueId":10052,"modifiedBy":"admin","executionIndex":"0001479152925797-4676fceeffffec4c-0001","issueIndex":10052,"executionStatusIndex":2}


## Get StepResult [/public/rest/api/1.0/stepresult/{stepResultId}{?executionId}]
### Get StepResult [GET]
 Get list of StepResult by stepResultId  


+ Parameters
    + executionId (required,  String) ... executionId of StepResult
    + stepResultId (required,  String) ... stepResultId of StepResult


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"id":"0001479249470841-fa312653ffffd5ee-0001","executedOn":1479249470841,"executedBy":"admin","executionId":"0001479152925797-4676fceeffffec4c-0001","stepId":"0001479249432886-fa312653ffffd5ee-0001","status":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"issueId":10052,"executionIndex":"0001479152925797-4676fceeffffec4c-0001","issueIndex":10052,"executionStatusIndex":-1}



# Group Teststep
TeststepController

## Move TestStep  [/public/rest/api/1.0/teststep/{issueId}/{id}/move{?projectId}]
### Move TestStep  [POST]
 move TestStep by testStepId  


+ Parameters
    + issueId (required,  Long) ... issueId of Teststep
    + id (required,  String) ... id of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        {"after":"/public/rest/api/1.0/teststep/10200/0001479232086830-fa312653ffffd5ee-0001?projectId=10000"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"id":"0001479232750769-fa312653ffffd5ee-0001","orderId":1,"issueId":10200,"step":"Step","data":"Data","result":"Result","createdBy":"admin","modifiedBy":"admin","createdOn":1479232750770,"lastModifiedOn":1479232750770},{"id":"0001479232086830-fa312653ffffd5ee-0001","orderId":2,"issueId":10200,"step":"Sample Step Updated","data":"Sample Step Data","result":"Sample Expected Result","createdBy":"admin","modifiedBy":"admin","createdOn":1479232086830,"lastModifiedOn":1479232538185}]


## Delete TestStep  [/public/rest/api/1.0/teststep/{issueId}/{id}{?projectId}]
### Delete TestStep  [DELETE]
 Delete TestStep by testStepId  


+ Parameters
    + issueId (required,  Long) ... issueId of Teststep
    + id (required,  String) ... id of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"id":"0001479232086830-fa312653ffffd5ee-0001","orderId":1,"issueId":10200,"step":"Sample Step Updated","data":"Sample Step Data","result":"Sample Expected Result","createdBy":"admin","modifiedBy":"admin","createdOn":1479232086830,"lastModifiedOn":1479232538185},{"id":"0001479232750769-fa312653ffffd5ee-0001","orderId":2,"issueId":10200,"step":"Step","data":"Data","result":"Result","createdBy":"admin","modifiedBy":"admin","createdOn":1479232750770,"lastModifiedOn":1479232750770}]


## Get TestStep  [/public/rest/api/1.0/teststep/{issueId}/{id}{?projectId}]
### Get TestStep  [GET]
 Get TestStep by testStepId  


+ Parameters
    + issueId (required, Long) ... issueId of Teststep
    + id (required,  String) ... id of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"id":"0001479232750769-fa312653ffffd5ee-0001","orderId":1,"issueId":10200,"step":"Step","data":"Data","result":"Result","createdBy":"admin","modifiedBy":"admin","createdOn":1479232750770,"lastModifiedOn":1479232750770}


## Update TestStep  [/public/rest/api/1.0/teststep/{issueId}/{id}{?projectId}]
### Update TestStep  [PUT]
 Update TestStep by testStepId  


+ Parameters
    + issueId (required,  Long) ... issueId of Teststep
    + id (required,  String) ... id of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        {"id":"0001479232086830-fa312653ffffd5ee-0001","step":"Sample Step Updated"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"id":"0001479232086830-fa312653ffffd5ee-0001","orderId":1,"issueId":10200,"step":"Sample Step Updated","data":"Sample Step Data","result":"Sample Expected Result","createdBy":"admin","modifiedBy":"admin","createdOn":1479232086830,"lastModifiedOn":1479232538185}


## Create new TestStep  [/public/rest/api/1.0/teststep/{issueId}{?projectId}]
### Create new TestStep  [POST]
 Create new TestStep into issue  


+ Parameters
    + issueId (required,  Long) ... issueId of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        {"step":"Step","data":"Data","result":"Result"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"id":"0001479232750769-fa312653ffffd5ee-0001","orderId":2,"issueId":10200,"step":"Step","data":"Data","result":"Result","createdBy":"admin","createdOn":1479232750770,"lastModifiedOn":1479232750770}


## Get TestSteps [/public/rest/api/1.0/teststep/{issueId}{?projectId}]
### Get TestSteps [GET]
 Get all TestSteps by projectId and issueId  


+ Parameters
    + issueId (required,  Long) ... issueId of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"id":"0001479232086830-fa312653ffffd5ee-0001","orderId":1,"issueId":10200,"step":"Sample Step","data":"Sample Step Data","result":"Sample Expected Result","createdBy":"admin","modifiedBy":"admin","createdOn":1479232086830,"lastModifiedOn":1479232292243}]


## Get TestStep statuses  [/public/rest/api/1.0/teststep/statuses]
### Get TestStep statuses  [GET]
Get List of all statuses related to Test Steps. 



+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}]


## Clone TestStep  [/public/rest/api/1.0/teststep/{issueId}/clone/{id}{?projectId}]
### Clone TestStep  [POST]
 Clone TestStep by testStepId  


+ Parameters
    + issueId (required,  Long) ... issueId of Teststep
    + id (required,  String) ... id of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        {"data":"Data","result":"Result","step":"CLONE - Step","position":"-1"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"id":"0001479232086830-fa312653ffffd5ee-0001","orderId":1,"issueId":10200,"step":"Sample Step Updated","data":"Sample Step Data","result":"Sample Expected Result","createdBy":"admin","modifiedBy":"admin","createdOn":1479232086830,"lastModifiedOn":1479232538185},{"id":"0001479232750769-fa312653ffffd5ee-0001","orderId":2,"issueId":10200,"step":"Step","data":"Data","result":"Result","createdBy":"admin","createdOn":1479232750770,"lastModifiedOn":1479232750770},{"id":"0001479232804958-fa312653ffffd5ee-0001","orderId":3,"issueId":10200,"step":"CLONE - Step","data":"Data","result":"Result","createdBy":"admin","modifiedBy":"admin","createdOn":1479232804958,"lastModifiedOn":1479232804958}]



# Group Traceability
TraceabilityController

## Get search defect statistics  [/public/rest/api/1.0/traceability/search/defect/statistics{?versionId,defectIdList}]
### Get search defect statistics  [GET]
 Get search defect statistics  


+ Parameters
    + versionId (optional,  Long ) ... versionId of Traceability
    + defectIdList (required,  String) ... defectIdList of Traceability


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"defect":{"id":10009,"key":"SAM-10","status":"To Do","statusId":10000,"summary":"As a developer, I can update details on an item using the Detail View >> Click the \"SAM-13\" link at the top of this card to open the detail view"},"executionStat":{"statuses":[],"total":0},"reqStat":{"count":0},"testStat":{"count":0}},{"defect":{"id":10006,"key":"SAM-7","status":"To Do","statusId":10000,"summary":"As a product owner, I'd like to include bugs, tasks and other issue types in my backlog >> Bugs like this one will also appear in your backlog but they are not normally estimated"},"executionStat":{"statuses":[],"total":0},"reqStat":{"count":0},"testStat":{"count":0}}]


## Get traceability search tests by requirements   [/public/rest/api/1.0/traceability/search/tests/requirement{?versionId,requirementIdOrKeyList}]
### Get traceability search tests by requirements   [GET]
 Get traceability search test by requirements  


+ Parameters
    + versionId (optional,  Long ) ... versionId of Traceability
    + requirementIdOrKeyList (required,  String) ... requirementIdOrKeyList of Traceability


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"requirement":{"id":10013,"key":"SAM-14","status":"Done","statusId":10001,"summary":"Instructions for deleting this sample board and project are in the description for this issue >> Click the \"SAM-17\" link and read the description tab of the detail view for more"},"tests":[{"defectStat":{"total":0},"executionStat":{"statuses":[{"count":2,"status":"UNEXECUTED"}],"total":2},"test":{"id":10200,"key":"SAM-85","status":"To Do","statusId":10000,"summary":"Samsul"}},{"defectStat":{"total":0},"executionStat":{"statuses":[],"total":0},"test":{"id":10048,"key":"SAM-49","status":"To Do","statusId":10000,"summary":"z"}}],"totalDefects":0},{"requirement":{"id":10009,"key":"SAM-10","status":"To Do","statusId":10000,"summary":"As a developer, I can update details on an item using the Detail View >> Click the \"SAM-13\" link at the top of this card to open the detail view"},"tests":[],"totalDefects":0},{"requirement":{"id":10006,"key":"SAM-7","status":"To Do","statusId":10000,"summary":"As a product owner, I'd like to include bugs, tasks and other issue types in my backlog >> Bugs like this one will also appear in your backlog but they are not normally estimated"},"tests":[],"totalDefects":0}]


## Get traceability search executions by test  [/public/rest/api/1.0/traceability/search/executions/test{?versionId,maxResult,offset,testId}]
### Get traceability search executions by test  [GET]
 Get traceability search executions by test  


+ Parameters
    + versionId (optional,  Long ) ... versionId of Traceability
    + maxResult (required,  Integer) ... maxResult of Traceability
    + offset (required,  Integer) ... offset of Traceability
    + testId (required,  Long) ... testId of Traceability


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"executions":[{"execution":{"id":"0001479277915060-fa312653ffffd5ee-0001","status":"WIP","statusId":"3","stepLevel":false,"testCycle":"Ad hoc"},"requirement":[{"id":10009,"key":"SAM-10","status":"To Do","statusId":10000,"summary":"As a developer, I can update details on an item using the Detail View >> Click the \"SAM-13\" link at the top of this card to open the detail view"}],"test":{"id":10100,"key":"SAM-83","status":"To Do","statusId":10000,"summary":"Sample"}}],"totalCount":1}


## Download traceability report  [/public/rest/api/1.0/traceability/export/download/{fileName}]
### Download traceability report  [GET]
 Download traceability report by fileName  


+ Parameters
    + fileName (required,  String) ... fileName of Traceability


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        


## Get search executions by defect  [/public/rest/api/1.0/traceability/search/executions/defect{?versionId,maxResult,offset,defectId}]
### Get search executions by defect  [GET]
 Get search execution by defect  


+ Parameters
    + versionId (optional,  Long ) ... versionId of Traceability
    + maxResult (required,  Integer) ... maxResult of Traceability
    + offset (required,  Integer) ... offset of Traceability
    + defectId (required,  Long) ... defectId of Traceability


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"executions":[{"execution":{"id":"0001479277915060-fa312653ffffd5ee-0001","status":"WIP","statusId":"3","stepLevel":false,"testCycle":"Ad hoc"},"requirement":[{"id":10009,"key":"SAM-10","status":"To Do","statusId":10000,"summary":"As a developer, I can update details on an item using the Detail View >> Click the \"SAM-13\" link at the top of this card to open the detail view"}],"test":{"id":10100,"key":"SAM-83","status":"To Do","statusId":10000,"summary":"Sample"}}],"totalCount":1}


## Perform export job  [/public/rest/api/1.0/traceability/export{?versionId}]
### Perform export job  [POST]
 Perform export job  


+ Parameters
    + versionId (optional,  Long ) ... versionId of Traceability


+ Request (application/json)

        {"exportType":"html","requirementIdList":["10009","10006"],"versionId":10000}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"jobProgressTicket":"0001479325760029-725f24aeffff8568-0001"}



# Group ZQL
ZQLController

## Get ZQL field values  [/public/rest/api/1.0/zql/fields/values]
### Get ZQL field values  [GET]
 Get ZQL field values  



+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"fields":{"project":[{"id":10000,"key":"SAM","name":"Samsung"},{"id":10100,"key":"SONY","name":"SONY"}],"fixVersion":[{"id":-1,"name":"Unscheduled","projectId":10000,"archived":false,"released":false},{"id":10002,"name":"Version 3.0","projectId":10000,"archived":false,"released":false},{"id":10001,"name":"Version 1.0","projectId":10000,"archived":false,"released":true},{"id":10000,"name":"Version 2.0","projectId":10000,"archived":false,"released":false},{"id":-1,"name":"Unscheduled","projectId":10100,"archived":false,"released":false},{"id":10100,"name":"sonyV1","projectId":10100,"archived":false,"released":false},{"id":10101,"name":"sonyV2","projectId":10100,"archived":false,"released":false},{"id":10102,"name":"sonyV3","projectId":10100,"archived":false,"released":false},{"id":10103,"name":"sonyV4","projectId":10100,"archived":false,"released":false},{"id":10104,"name":"sonyV5","projectId":10100,"archived":false,"released":false}],"component":[{"id":10000,"name":"sonyC1","projectId":10100},{"id":10001,"name":"sonyC2","projectId":10100},{"id":10002,"name":"sonyC3","projectId":10100},{"id":10003,"name":"sonyC4","projectId":10100},{"id":10004,"name":"sonyC5","projectId":10100}],"priority":[{"id":1,"name":"Highest"},{"id":2,"name":"High"},{"id":3,"name":"Medium"},{"id":4,"name":"Low"},{"id":5,"name":"Lowest"}],"executionStatus":[{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}],"cycleName":[{"id":"-1","name":"Ad hoc","projectId":10000,"versionId":-1},{"id":"-1","name":"Ad hoc","projectId":10100,"versionId":10101},{"id":"0001479155949754-4676fceeffffec4c-0001","name":"Sample Cycle","projectId":10000,"versionId":-1},{"id":"0001479155955288-4676fceeffffec4c-0001","name":"b","projectId":10000,"versionId":-1},{"id":"0001479155963840-4676fceeffffec4c-0001","name":"c","projectId":10000,"versionId":-1},{"id":"0001479155968682-4676fceeffffec4c-0001","name":"d","projectId":10000,"versionId":-1},{"id":"0001479155972223-4676fceeffffec4c-0001","name":"e","projectId":10000,"versionId":-1},{"id":"0001479153073431-4676fceeffffec4c-0001","name":"adfasdfa","projectId":10000,"versionId":-1},{"id":"0001479153076837-4676fceeffffec4c-0001","name":"asdfasdf","projectId":10000,"versionId":-1},{"id":"0001479152872028-4676fceeffffec4c-0001","name":"Another","projectId":10000,"versionId":-1},{"id":"0001479152878248-4676fceeffffec4c-0001","name":"Another A","projectId":10000,"versionId":-1},{"id":"0001479242469981-fa312653ffffd5ee-0001","name":"Sprint1","projectId":10100,"versionId":10101}],"executedBy":[{"id":"admin","key":"admin","name":"মাসুদুর রহমান   [Administrator]","fullName":"মাসুদুর রহমান   [Administrator]"}],"assignee":[{"id":"admin","key":"admin","name":"মাসুদুর রহমান   [Administrator]","fullName":"মাসুদুর রহমান   [Administrator]"}],"executionDate":null,"creationDate":null}}


## Get ZQL field config  [/public/rest/api/1.0/zql/fields]
### Get ZQL field config  [GET]
 Get ZQL field configuration  



+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"indexName":"projectId","fieldName":"project","displayName":"Project","i18NName":"Project","supportedOperators":["not in","in","is","!=","is not","="],"dataType":"Long","selectionType":"MultiSelect","isDefault":true,"visible":true,"orderId":1,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT"]},{"indexName":"priorityId","fieldName":"priority","displayName":"Priority","i18NName":"Priority","supportedOperators":["not in","in","is","!=","is not","="],"dataType":"Long","selectionType":"MultiSelect","isDefault":true,"visible":true,"orderId":7,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT"]},{"indexName":"cycleId","fieldName":"cycleName","displayName":"Cycle Name","i18NName":"Cycle Name","supportedOperators":["not in","in","is","!=","is not","!~","=","~"],"dataType":"String","selectionType":"MultiSelect","isDefault":true,"visible":true,"orderId":3,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["LIKE","NOT_LIKE","EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT"]},{"indexName":"status","fieldName":"executionStatus","displayName":"Execution Status","i18NName":"Execution Status","supportedOperators":["not in","in","is","!=","is not","="],"dataType":"String","selectionType":"MultiSelect","isDefault":true,"visible":true,"orderId":4,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT"]},{"indexName":"versionId","fieldName":"fixVersion","displayName":"Fix Version","i18NName":"Fix Version","supportedOperators":["not in","in","is","is not","!=","="],"dataType":"Long","selectionType":"MultiSelect","isDefault":true,"visible":true,"orderId":2,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["IS_NOT","NOT_EQUALS","IN","NOT_IN","IS","EQUALS"]},{"indexName":"executor","fieldName":"executedBy","displayName":"Executed By","i18NName":"Executed By","supportedOperators":["not in","in","is","!=","is not","="],"dataType":"String","selectionType":"MultiSelect","isDefault":true,"visible":true,"orderId":5,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT"]},{"indexName":"executedOn","fieldName":"executionDate","displayName":"Executed On","i18NName":"Executed On","supportedOperators":["<=","not in","in","is","!=","is not","<","=",">",">="],"dataType":"Date","selectionType":"Range","isDefault":true,"visible":true,"orderId":6,"auto":false,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT","LESS_THAN","LESS_THAN_EQUALS","GREATER_THAN","GREATER_THAN_EQUALS"]},{"indexName":"creationDate","fieldName":"creationDate","displayName":"Creation Date","i18NName":"Creation Date","supportedOperators":["<=","not in","in","is","!=","is not","<","=",">",">="],"dataType":"Date","selectionType":"Range","isDefault":false,"visible":false,"orderId":8,"auto":false,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT","LESS_THAN","LESS_THAN_EQUALS","GREATER_THAN","GREATER_THAN_EQUALS"]},{"indexName":"componentId","fieldName":"component","displayName":"Component","i18NName":"Component","supportedOperators":["not in","in","is","!=","is not","="],"dataType":"Long","selectionType":"MultiSelect","isDefault":false,"visible":false,"orderId":9,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT"]},{"indexName":"issueId","fieldName":"issue","displayName":"Issue","i18NName":"Issue Key","supportedOperators":["<=","not in","in","!=","<","=",">",">="],"dataType":"Long","selectionType":"MultiSelect","isDefault":false,"visible":true,"orderId":10,"auto":false,"isBasicField":false,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","LESS_THAN","LESS_THAN_EQUALS","GREATER_THAN","GREATER_THAN_EQUALS"]},{"indexName":"assignedTo","fieldName":"assignee","displayName":"Assigned To","i18NName":"Assigned To","supportedOperators":["not in","in","is","!=","is not","="],"dataType":"String","selectionType":"MultiSelect","isDefault":true,"visible":true,"orderId":11,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT"]}]


## Get execute nav search  [/public/rest/api/1.0/zql/search{?isAdvanced}]
### Get execute nav search  [POST]
 Get execution navigation search result  


+ Parameters
    + isAdvanced (optional, Boolean) ... isAdvanced of ZQL


+ Request (application/json)

        {"maxRecords":20,"offset":0,"zqlQuery":"fixVersion = \"Version 3.0\"","fields":{"fixVersion":[{"id":10002,"name":"Version 3.0","projectId":10000,"released":false,"archived":false}]}}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"searchObjectList":[],"totalCount":0,"currentOffset":1,"maxAllowed":0,"executionStatus":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}},"stepExecutionStatus":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#2DFB2E","type":0}}}


## Get autocomplete values  [/public/rest/api/1.0/zql/autocomplete{?fieldName,fieldValue}]
### Get autocomplete values  [GET]
 Get autocomplete field values  


+ Parameters
    + fieldName (required,  String) ... fieldName of ZQL
    + fieldValue (required,  String) ... fieldValue of ZQL


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"displayName":"SONY","value":"SONY"},{"displayName":"Samsung","value":"Samsung"}]



# Group ZQLFilter
ZQLFilterController

## Get ZQL filter quick search  [/public/rest/api/1.0/zql/filters/quicksearch{?query}]
### Get ZQL filter quick search  [GET]
 Get ZQL filter quick search by query  


+ Parameters
    + query (optional,  String ) ... query of ZQLFilter


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"zql":"executedBy = \"admin\"","createdBy":"মাসুদুর রহমান   [Administrator]","name":"Sample Filter","description":"some desc","id":"0001479339613042-725f24aeffff8568-0001","creationDate":1479339613042}]


## Copy ZQL filter  [/public/rest/api/1.0/zql/filter/copy]
### Copy ZQL filter  [PUT]
 Copy ZQL filter  



+ Request (application/json)

        {"id":"0001479339613042-725f24aeffff8568-0001","name":"Copy of Sample Filter","zql":"executedBy = \"admin\"","favorite":true}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"updatedBy":null,"markedFavoriteBy":["admin"],"description":"some desc","updatedOn":null,"createdOn":1479339760794,"createdByDisplayName":"মাসুদুর রহমান   [Administrator]","zql":"executedBy = \"admin\"","createdBy":"admin","name":"Copy of Sample Filter","tenantId":"jira:7b5790a6-b7e7-4e09-9bd4-c87c05720ff2","id":"0001479339760794-725f24aeffff8568-0001","class":"com.thed.zephyr.connect.model.nosql.ZQLFilter","favorite":true,"sharePerm":"global"}


## Search ZQL filter by name  [/public/rest/api/1.0/zql/filters/search{?owner,name,sharePerm}]
### Search ZQL filter by name  [GET]
 Get ZQL filter by name  


+ Parameters
    + owner (optional,  String ) ... owner of ZQLFilter
    + name (optional,  String ) ... name of ZQLFilter
    + sharePerm (optional,  String ) ... sharePerm of ZQLFilter


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"description":"","totalCount":2,"creationDate":1479340041189,"currentIndex":1,"zql":"fixVersion = Unscheduled","createdBy":"মাসুদুর রহমান   [Administrator]","popularity":1,"name":"Sample Filter","maxResultAllowed":20,"executionCount":1,"id":"0001479340041189-725f24aeffff8568-0001","linksNew":[1],"sharePerm":"global","favorite":true},{"description":"","totalCount":2,"creationDate":1479340051087,"currentIndex":1,"zql":"fixVersion = Unscheduled","createdBy":"মাসুদুর রহমান   [Administrator]","popularity":1,"name":"Sample Filter 2","maxResultAllowed":20,"executionCount":1,"id":"0001479340051087-725f24aeffff8568-0001","linksNew":[1],"sharePerm":"global","favorite":true}]


## Toggle ZQL filter  [/public/rest/api/1.0/zql/filter/{filterId}/favorite]
### Toggle ZQL filter  [PUT]
 Toggle ZQL filter by filterId  


+ Parameters
    + filterId (required,  String) ... filterId of ZQLFilter


+ Request (application/json)

        {"isFavorite":false,"id":"0001479339760794-725f24aeffff8568-0001"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"updatedBy":null,"markedFavoriteBy":[],"description":"some desc","updatedOn":null,"createdOn":1479339760794,"createdByDisplayName":"মাসুদুর রহমান   [Administrator]","zql":"executedBy = \"admin\"","createdBy":"admin","name":"Copy of Sample Filter","tenantId":"jira:7b5790a6-b7e7-4e09-9bd4-c87c05720ff2","id":"0001479339760794-725f24aeffff8568-0001","class":"com.thed.zephyr.connect.model.nosql.ZQLFilter","favorite":false,"sharePerm":"global"}


## Save ZQL filter  [/public/rest/api/1.0/zql/filter]
### Save ZQL filter  [POST]
 Save ZQL filter by filterName  



+ Request (application/json)

        {"zql":"executedBy = \"admin\"","name":"Sample Filter","description":"some desc","favorite":true,"sharePerm":"global"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"updatedBy":null,"markedFavoriteBy":["admin"],"description":"some desc","updatedOn":null,"createdOn":1479339613042,"createdByDisplayName":"মাসুদুর রহমান   [Administrator]","zql":"executedBy = \"admin\"","createdBy":"admin","name":"Sample Filter","tenantId":"jira:7b5790a6-b7e7-4e09-9bd4-c87c05720ff2","id":"0001479339613042-725f24aeffff8568-0001","class":"com.thed.zephyr.connect.model.nosql.ZQLFilter","favorite":true,"sharePerm":"global"}


## Get ZQL filter  [/public/rest/api/1.0/zql/filter/{filterId}]
### Get ZQL filter  [GET]
 Get ZQL filter by filterId  


+ Parameters
    + filterId (required,  String) ... filterId of ZQLFilter


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"updatedBy":null,"markedFavoriteBy":["admin"],"description":"","updatedOn":null,"createdOn":1479340051087,"createdByDisplayName":"মাসুদুর রহমান   [Administrator]","zql":"fixVersion = Unscheduled","createdBy":"admin","name":"Sample Filter 2","tenantId":"jira:7b5790a6-b7e7-4e09-9bd4-c87c05720ff2","id":"0001479340051087-725f24aeffff8568-0001","class":"com.thed.zephyr.connect.model.nosql.ZQLFilter","favorite":true,"sharePerm":"global"}


## Get ZQL filters by query  [/public/rest/api/1.0/zql/filters{?maxRecords,offset,fav,byUser}]
### Get ZQL filters by query  [GET]
 Get ZQL filters by query  


+ Parameters
    + maxRecords (optional,  Integer ) ... maxRecords of ZQLFilter
    + offset (optional, Integer ) ... offset of ZQLFilter
    + fav (optional,  Boolean ) ... fav of ZQLFilter
    + byUser (optional,  Boolean ) ... byUser of ZQLFilter


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"description":"some desc","totalCount":1,"creationDate":1479339613042,"currentIndex":1,"zql":"executedBy = \"admin\"","createdBy":"মাসুদুর রহমান   [Administrator]","popularity":1,"name":"Sample Filter","maxResultAllowed":10,"executionCount":1,"id":"0001479339613042-725f24aeffff8568-0001","linksNew":[1],"sharePerm":"global","favorite":true}]


## Delete ZQL filter  [/public/rest/api/1.0/zql/filter/{filterId}]
### Delete ZQL filter  [DELETE]
 Delete ZQL filter by filterId  


+ Parameters
    + filterId (required,  String) ... filterId of ZQLFilter


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (text/html)

        Execution Filter deleted successfully.


## Update ZQL filter  [/public/rest/api/1.0/zql/filter/{filterId}]
### Update ZQL filter  [PUT]
 Update ZQL filter by filterId  


+ Parameters
    + filterId (required,  String) ... filterId of ZQLFilter


+ Request (application/json)

        {"favorite":true,"id":"0001479339613042-725f24aeffff8568-0001","description":"some desc","name":"Sample Filter Updated","sharePerm":"private","zql":"executedBy = \"admin\""}



    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"updatedBy":"admin","markedFavoriteBy":["admin"],"description":"some desc","updatedOn":1479339931575,"createdOn":1479339613042,"createdByDisplayName":"মাসুদুর রহমান   [Administrator]","zql":"executedBy = \"admin\"","createdBy":"admin","name":"Sample Filter Updated","tenantId":"jira:7b5790a6-b7e7-4e09-9bd4-c87c05720ff2","id":"0001479339613042-725f24aeffff8568-0001","class":"com.thed.zephyr.connect.model.nosql.ZQLFilter","favorite":true,"sharePerm":"private"}



